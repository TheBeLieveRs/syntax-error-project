/* Blob.js
 * A Blob implementation.
 * 2014-05-31
 * 
 * By Eli Grey, http://eligrey.com
 * By Devin Samarin, https://github.com/eboyjr
 * License: X11/MIT
 *   See https://github.com/eligrey/Blob.js/blob/master/LICENSE.md
 */

(function (b) {
    b.URL = b.URL || b.webkitURL; if (b.Blob && b.URL) try { new Blob; return } catch (x) { } var p = b.BlobBuilder || b.WebKitBlobBuilder || b.MozBlobBuilder || function (c) {
        var b = function (a) { return Object.prototype.toString.call(a).match(/^\[object\s(.*)\]$/)[1] }, k = function () { this.data = [] }, f = function (a, d, b) { this.data = a; this.size = a.length; this.type = d; this.encoding = b }, e = k.prototype, g = f.prototype, q = c.FileReaderSync, r = function (a) { this.code = this[this.name = a] }, s = "NOT_FOUND_ERR SECURITY_ERR ABORT_ERR NOT_READABLE_ERR ENCODING_ERR NO_MODIFICATION_ALLOWED_ERR INVALID_STATE_ERR SYNTAX_ERR".split(" "),
        l = s.length, h = c.URL || c.webkitURL || c, t = h.createObjectURL, u = h.revokeObjectURL, m = h, v = c.btoa, w = c.atob, p = c.ArrayBuffer, n = c.Uint8Array; for (f.fake = g.fake = !0; l--;) r.prototype[s[l]] = l + 1; h.createObjectURL || (m = c.URL = {}); m.createObjectURL = function (a) {
            var d = a.type; null === d && (d = "application/octet-stream"); if (a instanceof f) return d = "data:" + d, "base64" === a.encoding ? d + ";base64," + a.data : "URI" === a.encoding ? d + "," + decodeURIComponent(a.data) : v ? d + ";base64," + v(a.data) : d + "," + encodeURIComponent(a.data); if (t) return t.call(h,
            a)
        }; m.revokeObjectURL = function (a) { "data:" !== a.substring(0, 5) && u && u.call(h, a) }; e.append = function (a) {
            var d = this.data; if (n && (a instanceof p || a instanceof n)) { var c = ""; a = new n(a); for (var e = 0, g = a.length; e < g; e++) c += String.fromCharCode(a[e]); d.push(c) } else if ("Blob" === b(a) || "File" === b(a)) if (q) c = new q, d.push(c.readAsBinaryString(a)); else throw new r("NOT_READABLE_ERR"); else a instanceof f ? "base64" === a.encoding && w ? d.push(w(a.data)) : "URI" === a.encoding ? d.push(decodeURIComponent(a.data)) : "raw" === a.encoding &&
            d.push(a.data) : ("string" !== typeof a && (a += ""), d.push(unescape(encodeURIComponent(a))))
        }; e.getBlob = function (a) { arguments.length || (a = null); return new f(this.data.join(""), a, "raw") }; e.toString = function () { return "[object BlobBuilder]" }; g.slice = function (a, c, b) { var e = arguments.length; 3 > e && (b = null); return new f(this.data.slice(a, 1 < e ? c : this.data.length), b, this.encoding) }; g.toString = function () { return "[object Blob]" }; g.close = function () { this.size = 0; delete this.data }; return k
    }(b); b.Blob = function (c, b) {
        var k = b ? b.type ||
        "" : "", f = new p; if (c) for (var e = 0, g = c.length; e < g; e++) f.append(c[e]); return f.getBlob(k)
    }
})("undefined" !== typeof self && self || "undefined" !== typeof window && window || this.content || this);

  /* canvas-toBlob.js
 * A canvas.toBlob() implementation.
 * 2013-12-27
 * 
 * By Eli Grey, http://eligrey.com and Devin Samarin, https://github.com/eboyjr
 * License: X11/MIT
 *   See https://github.com/eligrey/canvas-toBlob.js/blob/master/LICENSE.md
 */

(function (a) {
    var l = a.Uint8Array, d = (a = a.HTMLCanvasElement) && a.prototype, t = /\s*;\s*base64\s*(?:;|$)/i, n = "toDataURL", s; l && (s = new l([62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, 0, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51])); a && !d.toBlob && (d.toBlob = function (a, g) {
        g || (g = "image/png"); if (this.mozGetAsFile) a(this.mozGetAsFile("canvas", g)); else if (this.msToBlob && /^\s*image\/png\s*(?:$|;)/i.test(g)) a(this.msToBlob());
        else {
            var e = Array.prototype.slice.call(arguments, 1), b = this[n].apply(this, e), f = b.indexOf(","), e = b.substring(f + 1), b = t.test(b.substring(0, f)), c; if (Blob.fake) c = new Blob, c.encoding = b ? "base64" : "URI", c.data = e, c.size = e.length; else if (l) if (b) { c = Blob; for (var b = e.length, f = new l(b / 4 * 3 | 0), d = 0, p = 0, h = [0, 0], q = 0, k = 0, m, r; b--;) r = e.charCodeAt(d++), m = s[r - 43], 255 !== m && void 0 !== m && (h[1] = h[0], h[0] = r, k = k << 6 | m, q++, 4 === q && (f[p++] = k >>> 16, 61 !== h[1] && (f[p++] = k >>> 8), 61 !== h[0] && (f[p++] = k), q = 0)); c = new c([f], { type: g }) } else c = new Blob([decodeURIComponent(e)],
            { type: g }); a(c)
        }
    }, d.toBlobHD = d.toDataURLHD ? function () { n = "toDataURLHD"; var a = this.toBlob(); n = "toDataURL"; return a } : d.toBlob)
})("undefined" !== typeof self && self || "undefined" !== typeof window && window || this.content || this);

/*!
FileReader.js - v0.99
A lightweight wrapper for common FileReader usage.
Copyright 2014 Brian Grinstead - MIT License.
See http://github.com/bgrins/filereader.js for documentation.
*/

(function (f, u) {
    function w(a) { var b = f.URL || f.webkitURL, c = f.Blob, d = f.Worker; if (!(b && c && d && a)) return null; a = new c([a]); return new d(b.createObjectURL(a)) } function x(a, b) { function c(a) { for (var b = [], c = (a.clipboardData || {}).items || [], g = 0; g < c.length; g++) { var k = c[g].getAsFile(); if (k) { var n = /\/(.*)/.exec(k.type); !k.name && n && (k.name = "clipboard" + g + "." + n[1]); b.push(k) } } b.length && (s(a, b, d), a.preventDefault(), a.stopPropagation()) } if (l.enabled) { var d = p(p({}, l.opts), b); a.addEventListener("paste", c, !1) } } function y(a,
    b) { function c(b) { s(b, a.files, r) } function d(a) { a.stopPropagation(); a.preventDefault(); s(a, a.dataTransfer.files, r) } if (l.enabled) { var r = p(p({}, l.opts), b); a.addEventListener("change", c, !1); a.addEventListener("drop", d, !1) } } function z(a, b) {
        function c(a) { f = !1 } function d(a) { f = !0 } function r(a) { a.dataTransfer.files && a.dataTransfer.files.length && (a.stopPropagation(), a.preventDefault()) } function e(a) { return function () { f || a.apply(this, arguments) } } function h(b) {
            b.stopPropagation(); b.preventDefault(); m && A(a, m);
            s(b, b.dataTransfer.files, q)
        } function g(b) { b.stopPropagation(); b.preventDefault(); m && B(a, m) } function k(b) { m && A(a, m) } function n(b) { b.stopPropagation(); b.preventDefault(); m && B(a, m) } if (l.enabled) {
            var q = p(p({}, l.opts), b), m = q.dragClass, f = !1; a.addEventListener("dragenter", e(g), !1); a.addEventListener("dragleave", e(k), !1); a.addEventListener("dragover", e(n), !1); a.addEventListener("drop", e(h), !1); u.body.addEventListener("dragstart", d, !0); u.body.addEventListener("dragend", c, !0); u.body.addEventListener("drop",
            r, !1)
        }
    } function E(a, b) { for (var c = 0; c < a.length; c++) { var d = a[c], e = d, f = d.name.substring(0, d.name.lastIndexOf(".")), h = d.name.substring(d.name.lastIndexOf(".") + 1), g = c, k = F(), n = b, d = d.size, q = Math.floor(Math.log(d) / Math.log(1024)), d = (d / Math.pow(1024, Math.floor(q))).toFixed(2) + " " + "bytes kb MB GB TB PB".split(" ")[q]; e.extra = { nameNoExtension: f, extension: h, fileID: g, uniqueID: k, groupID: n, prettySize: d } } } function G(a, b, c) { for (var d in b) if (a.match(new RegExp(d))) return "readAs" + b[d]; return "readAs" + c } function s(a,
    b, c) {
        function d() { h.ended = new Date; c.on.groupend(h) } function e() { 0 === --f && d() } var f = b.length, h = { groupID: H(), files: b, started: new Date }; l.output.push(h); E(b, h.groupID); c.on.groupstart(h); if (b.length) {
            var g; v && t && (g = w(I), g.onmessage = function (a) { var b = a.data.file, d = a.data.result; b.extra || (b.extra = a.data.extra); b.extra.ended = new Date; c.on["error" === d ? "error" : "load"]({ target: { result: d } }, b); e() }); Array.prototype.forEach.call(b, function (b) {
                b.extra.started = new Date; if (c.accept && !b.type.match(new RegExp(c.accept))) c.on.skip(b),
                e(); else if (!1 === c.on.beforestart(b)) c.on.skip(b), e(); else { var d = G(b.type, c.readAsMap, c.readAsDefault); if (g) g.postMessage({ file: b, extra: b.extra, readAs: d }); else { var f = new C; f.originalEvent = a; J.forEach(function (a) { f["on" + a] = function (d) { if ("load" == a || "error" == a) b.extra.ended = new Date; c.on[a](d, b); "loadend" == a && e() } }); f[d](b) } }
            })
        } else d()
    } function K() { var a = w(L); a && (a.onmessage = function (a) { t = a.data }, a.postMessage({})) } function e() { } function p(a, b) {
        for (var c in b) b[c] && b[c].constructor && b[c].constructor ===
        Object ? (a[c] = a[c] || {}, arguments.callee(a[c], b[c])) : a[c] = b[c]; return a
    } function D(a, b) { return (new RegExp("(?:^|\\s+)" + b + "(?:\\s+|$)")).test(a.className) } function B(a, b) { D(a, b) || (a.className = a.className ? [a.className, b].join(" ") : b) } function A(a, b) { D(a, b) && (a.className = a.className.replace(new RegExp("(?:^|\\s+)" + b + "(?:\\s+|$)", "g"), " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "")) } var C = f.FileReader, t = !1, I = "self.addEventListener('message', function(e) { var data=e.data; try { var reader = new FileReaderSync; postMessage({ result: reader[data.readAs](data.file), extra: data.extra, file: data.file})} catch(e){ postMessage({ result:'error', extra:data.extra, file:data.file}); } }, false);",
    L = "onmessage = function(e) { postMessage(!!FileReaderSync); };", J = "loadstart progress load abort error loadend".split(" "), v = !1, l = f.FileReaderJS = { enabled: !1, setupInput: y, setupDrop: z, setupClipboard: x, setSync: function (a) { (v = a) && !t && K() }, getSync: function () { return v && t }, output: [], opts: { dragClass: "drag", accept: !1, readAsDefault: "DataURL", readAsMap: {}, on: { loadstart: e, progress: e, load: e, abort: e, error: e, loadend: e, skip: e, groupstart: e, groupend: e, beforestart: e } } }; "undefined" !== typeof jQuery && (jQuery.fn.fileReaderJS =
    function (a) { return this.each(function () { jQuery(this).is("input") ? y(this, a) : z(this, a) }) }, jQuery.fn.fileClipboard = function (a) { return this.each(function () { x(this, a) }) }); if (C) { var H = function (a) { return function () { return a++ } }(0), F = function (a) { return function () { return a++ } }(0); l.enabled = !0 }
})(this, document);


/* FileSaver.js
 *  A saveAs() FileSaver implementation.
 *  2014-05-27
 *
 *  By Eli Grey, http://eligrey.com
 *  License: X11/MIT
 *    See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md
 */

var saveAs = saveAs || "undefined" !== typeof navigator && navigator.msSaveOrOpenBlob && navigator.msSaveOrOpenBlob.bind(navigator) || function (a) {
    if ("undefined" === typeof navigator || !/MSIE [1-9]\./.test(navigator.userAgent)) {
        var l = a.document, q = l.createElementNS("http://www.w3.org/1999/xhtml", "a"), x = !a.externalHost && "download" in q, y = function (c) { var b = l.createEvent("MouseEvents"); b.initMouseEvent("click", !0, !1, a, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null); c.dispatchEvent(b) }, s = a.webkitRequestFileSystem, v = a.requestFileSystem ||
        s || a.mozRequestFileSystem, z = function (c) { (a.setImmediate || a.setTimeout)(function () { throw c; }, 0) }, t = 0, m = [], h = function () { for (var c = m.length; c--;) { var b = m[c]; "string" === typeof b ? (a.URL || a.webkitURL || a).revokeObjectURL(b) : b.remove() } m.length = 0 }, u = function (c, b, e) { b = [].concat(b); for (var a = b.length; a--;) { var d = c["on" + b[a]]; if ("function" === typeof d) try { d.call(c, e || c) } catch (f) { z(f) } } }, n = function (c, b) {
            var e = this, d = c.type, h = !1, f, r, l = function () { var b = (a.URL || a.webkitURL || a).createObjectURL(c); m.push(b); return b },
            n = function () { u(e, ["writestart", "progress", "write", "writeend"]) }, g = function () { if (h || !f) f = l(c); r ? r.location.href = f : window.open(f, "_blank"); e.readyState = e.DONE; n() }, k = function (b) { return function () { if (e.readyState !== e.DONE) return b.apply(this, arguments) } }, p = { create: !0, exclusive: !1 }, w; e.readyState = e.INIT; b || (b = "download"); if (x) f = l(c), q.href = f, q.download = b, y(q), e.readyState = e.DONE, n(); else {
                a.chrome && d && "application/octet-stream" !== d && (w = c.slice || c.webkitSlice, c = w.call(c, 0, c.size, "application/octet-stream"),
                h = !0); s && "download" !== b && (b += ".download"); if ("application/octet-stream" === d || s) r = a; v ? (t += c.size, v(a.TEMPORARY, t, k(function (a) {
                    a.root.getDirectory("saved", p, k(function (a) {
                        var d = function () {
                            a.getFile(b, p, k(function (a) {
                                a.createWriter(k(function (b) {
                                    b.onwriteend = function (b) { r.location.href = a.toURL(); m.push(a); e.readyState = e.DONE; u(e, "writeend", b) }; b.onerror = function () { var a = b.error; a.code !== a.ABORT_ERR && g() };["writestart", "progress", "write", "abort"].forEach(function (a) { b["on" + a] = e["on" + a] }); b.write(c);
                                    e.abort = function () { b.abort(); e.readyState = e.DONE }; e.readyState = e.WRITING
                                }), g)
                            }), g)
                        }; a.getFile(b, { create: !1 }, k(function (a) { a.remove(); d() }), k(function (a) { a.code === a.NOT_FOUND_ERR ? d() : g() }))
                    }), g)
                }), g)) : g()
            }
        }, d = n.prototype, p = function (a, b) { return new n(a, b) }; d.abort = function () { this.readyState = this.DONE; u(this, "abort") }; d.readyState = d.INIT = 0; d.WRITING = 1; d.DONE = 2; d.error = d.onwritestart = d.onprogress = d.onwrite = d.onabort = d.onerror = d.onwriteend = null; a.addEventListener("unload", h, !1); p.unload = function () {
            h();
            a.removeEventListener("unload", h, !1)
        }; return p
    }
}("undefined" !== typeof self && self || "undefined" !== typeof window && window || this.content); "undefined" !== typeof module && null !== module ? module.exports = saveAs : "undefined" !== typeof define && null !== define && null != define.amd && define([], function () { return saveAs });

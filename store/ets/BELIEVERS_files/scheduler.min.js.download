$(document).ready(function () {
    function F() { this.startHour = 1; this.startMinute = 0; this.startIsAM = !1; this.endHour = 1; this.endMinute = 0; this.meetsOnSunday = this.meetsOnSaturday = this.meetsOnFriday = this.meetsOnThursday = this.meetsOnWednesday = this.meetsOnTuesday = this.meetsOnMonday = this.endIsAM = !1; this.instructor = this.location = this.classType = "" } function G() { this.title = ""; this.meetingTimes = []; this.color = "#FFACCC"; this.SAVE_VERSION = 3; this.DATA_CHECK = "69761aa6-de4c-4013-b455-eb2a91fb2b76" } var f = new function () {
        this.scheduleTitle =
        ""; this.courses = []
    }, x = function () { return { to24HourTime: function (a, d, b, f) { b ? 12 === Math.floor(a) && (a = f && 0 === Math.floor(d) ? 24 : 0) : 12 != Math.floor(a) && (a += 12); return a + d / 60 }, timeToString: function (a, d, b) { a = "" + (a + ":"); 10 > d && (a += "0"); a += d; return b ? a + "AM" : a + "PM" } } }(); (function () {
        $("#add_course_button").click(function (a) { a.preventDefault(); $(this).blur(); q.setDialogAsAddCourse() }); $("#edit_course_button").click(function (a) {
            a.preventDefault(); $(this).blur(); a = $("#course_list").data(); a.callback = q.setDialogAsEditCourse;
            a.title = "Select Course To Edit"; $("#course_list").dialog("open")
        }); $("#delete_course_button").click(function (a) { a.preventDefault(); $(this).blur(); a = $("#course_list").data(); a.callback = H.confirmDeletion; a.title = "Select Course to Delete"; $("#course_list").dialog("open") }); $("#print_button").click(function (a) { a.preventDefault(); $(this).blur(); v.print() }); $("#save_image_button").click(function (a) { a.preventDefault(); $(this).blur(); v.saveImage() }); $("#import_schedule_button").click(function (a) {
            a.preventDefault();
            $(this).blur(); k.importSchedule()
        }); $("#export_schedule_button").click(function (a) { a.preventDefault(); $(this).blur(); k.exportSchedule() }); $("#new_schedule_button").click(function (a) { a.preventDefault(); $(this).blur(); $("#new_warning_dialog").dialog("open") }); $("#button_bar").tooltip({ show: { effect: "fade", delay: 500 }, position: { my: "right-10 bottom" } })
    })(); (function () {
        var a = $("#course_list").html(); (function () {
            function d(a, d) { $(a).click(function () { $("#course_list").dialog("close").data("callback")(f.courses[d]) }) }
            $("#course_list").dialog({
                hide: { effect: "fade", duration: 180 }, show: { effect: "fade", duration: 180 }, maxWidth: 450, maxHeight: 470, autoOpen: !1, modal: !0, create: function (a) { $(a.target).parent().css("position", "fixed") }, resizeStart: function (a) { $(a.target).parent().css("position", "fixed") }, resizeStop: function (a) { $(a.target).parent().css("position", "fixed") }, open: function () {
                    var a = $("#course_list").data("title"); $("#course_list").dialog("option", "title", a); if (0 != f.courses.length) {
                        for (a = 0; a < f.courses.length; a++) 0 <
                        a && $(".course_selection_button:last").clone(!0).appendTo("#course_list"); var l = 0; $(".course_selection_button").each(function () { $(this).css("background", f.courses[l].color); $(this).text(f.courses[l].title); d(this, l); l++ })
                    }
                }, close: function () { $("#course_list").html(a) }
            })
        })(); (function () {
            $("#course_list").bind("mousewheel DOMMouseScroll", function (a) {
                var b = null; "mousewheel" == a.type ? b = -1 * a.originalEvent.wheelDelta : "DOMMouseScroll" == a.type && (b = 40 * a.originalEvent.detail); b && (a.preventDefault(), $(this).scrollTop(b +
                $(this).scrollTop()))
            })
        })()
    })(); var H = function () {
        var a; (function () {
            $("#delete_course_dialog").dialog({
                autoOpen: !1, resizable: !1, modal: !0, title: "Confirm Course Deletion", hide: { effect: "fade", duration: 180 }, show: { effect: "fade", duration: 180 }, create: function (a) { $(a.target).parent().css("position", "fixed") }, resizeStart: function (a) { $(a.target).parent().css("position", "fixed") }, resizeStop: function (a) { $(a.target).parent().css("position", "fixed") }, buttons: {
                    Cancel: function () { $(this).dialog("close") }, Delete: function () {
                        $(this).data("course");
                        f.courses.splice(f.courses.indexOf(a), 1); v.redraw(); k.save(); $(this).dialog("close")
                    }
                }
            })
        })(); return { confirmDeletion: function (d) { a = d; $("#delete_course_dialog").dialog("open"); $("#delete_course_dialog_message").html("Are you sure you want to delete the course <b>" + d.title + "</b>?") } }
    }(), q = function () {
        function a() {
            d(); $(".time_input").each(function (a, g) {
                if (0 !== $(this).find(":checkbox:checked").length || $(this).find(":text").val()) {
                    var e = ""; $(this).find(":checkbox[value=mon]").is(":checked") && (e += "M"); $(this).find(":checkbox[value=tues]").is(":checked") &&
                    (e += "T"); $(this).find(":checkbox[value=wed]").is(":checked") && (e += "W"); $(this).find(":checkbox[value=thurs]").is(":checked") && (e += "R"); $(this).find(":checkbox[value=fri]").is(":checked") && (e += "F"); $(this).find(":checkbox[value=sat]").is(":checked") && (e += "S"); $(this).find(":checkbox[value=sun]").is(":checked") && (e += "U"); var e = e + "&nbsp&nbsp&nbsp&nbsp", b = $(this).find(".start_hour_textbox").val(), c = $(this).find(".end_hour_textbox").val(); if (b) {
                        var e = e + (b + ":"), d = $(this).find(".start_minute_textbox").val();
                        d ? (2 > d.length && (e += "0"), e += d) : e += "00"; e += $(this).find(".start_time_AMPM_selector").val()
                    } if (b || c) e += "-"; c && (e += c + ":", (b = $(this).find(".end_minute_textbox").val()) ? (2 > b.length && (e += "0"), e += b) : e += "00", e += $(this).find(".end_time_AMPM_selector").val()); $(this).find(".time_input_header_text").html(e)
                } else $(this).find(".time_input_header_text").text("Meeting Time " + (a + 1))
            })
        } function d() { var a = $(".time_input"); 1 == $(a).length ? $(a).find(".remove_time_button").hide() : $(a).find(".remove_time_button").show() }
        var b = !1, l, c, r = $("#course_input_contents").html(); (function () { $("#course_input").on("change", "input:checkbox, select", function () { a() }); $("#course_input").on("keyup", "input:text", function () { a() }) })(); (function () {
            $("#course_input").on("click", "#add_time_button", function () {
                if (25 <= $(".time_input").length) alert("You should petition your school for a more reasonable schedule."); else {
                    $(".time_input:last").clone(!0).insertBefore(this).hide().slideDown("fast"); var b = $(".time_input:last"); E.resetErrors(b);
                    $(b).find("input:checkbox").prop("checked", !1); $(b).find(".time_textbox").val(""); $(b).find(".class_type_textbox").val(""); a()
                }
            })
        })(); (function () { $("#course_input").on("click", ".remove_time_button", function (b) { b.preventDefault(); 1 < $(".time_input").length && $(this).closest(".time_input").slideUp("fast", function () { $(this).remove(); a() }) }) })(); (function () {
            $("#course_input").on("click", "#submit_button", function (a) {
                var g = new G; g.title = $("#course_title_textbox").val(); g.color = l; $(".time_input").each(function () {
                    var a =
                    new F; a.meetsOnMonday = $(this).find("input:checkbox[value=mon]").is(":checked"); a.meetsOnTuesday = $(this).find("input:checkbox[value=tues]").is(":checked"); a.meetsOnWednesday = $(this).find("input:checkbox[value=wed]").is(":checked"); a.meetsOnThursday = $(this).find("input:checkbox[value=thurs]").is(":checked"); a.meetsOnFriday = $(this).find("input:checkbox[value=fri]").is(":checked"); a.meetsOnSaturday = $(this).find("input:checkbox[value=sat]").is(":checked"); a.meetsOnSunday = $(this).find("input:checkbox[value=sun]").is(":checked");
                    a.startHour = parseInt($(this).find(".start_hour_textbox").val(), 10); a.endHour = parseInt($(this).find(".end_hour_textbox").val(), 10); a.startMinute = parseInt($(this).find(".start_minute_textbox").val(), 10); a.endMinute = parseInt($(this).find(".end_minute_textbox").val(), 10); a.location = $(this).find(".location_textbox").val(); a.classType = $(this).find(".class_type_textbox").val(); a.instructor = $(this).find(".instructor_textbox").val(); "AM" == $(this).find(".start_time_AMPM_selector").val() ? a.startIsAM = !0 : a.startIsAM =
                    !1; "AM" == $(this).find(".end_time_AMPM_selector").val() ? a.endIsAM = !0 : a.endIsAM = !1; g.meetingTimes.push(a)
                }); E.isValid() && (b && (a = f.courses.indexOf(c), f.courses.splice(a, 1)), f.courses.push(g), v.redraw(), k.save(), $("#course_input").dialog("close"))
            })
        })(); (function () { $("#course_input").on("click", "#course_color_button", function () { $("#color_picker_dialog").dialog("open") }) })(); (function () {
            $("#course_input").dialog({
                modal: !0, resizable: !0, autoOpen: !1, title: "Add Course", minWidth: 350, maxWidth: 410, width: 360,
                height: 550, hide: { effect: "fade", duration: 180 }, show: { effect: "fade", duration: 180 }, create: function (a) { $(a.target).parent().css("position", "fixed") }, resizeStart: function (a) { $(a.target).parent().css("position", "fixed") }, resizeStop: function (a) { $(a.target).parent().css("position", "fixed") }, close: function () { $("#course_input_contents").html(r); d(); $("#course_title_textbox").focus() }
            })
        })(); (function () {
            function a(b, c) {
                $("#course_input").on("keyup", b, function () {
                    $(".time_input").each(function () {
                        var a = $(this).find(c).val(),
                        d = $(this).find(b).val(); !a.trim() && d && ($(this).find(c).val("00"), $(this).find(c).trigger("change"))
                    })
                })
            } a(".start_hour_textbox", ".start_minute_textbox"); a(".end_hour_textbox", ".end_minute_textbox")
        })(); (function () { $("#course_input").on("focus", ".time_textbox", function () { $(this).one("mouseup", function () { $(this).select(); return !1 }) }).select() })(); (function () {
            $("#course_input").on("change", ".start_time_AMPM_selector", function () {
                "PM" === $(this).val() && ($(this).closest(".time_input").find(".end_time_AMPM_selector").val("PM"),
                a())
            })
        })(); (function () { $("#course_input").bind("mousewheel DOMMouseScroll", function (a) { var b = null; "mousewheel" == a.type ? b = -1 * a.originalEvent.wheelDelta : "DOMMouseScroll" == a.type && (b = 40 * a.originalEvent.detail); b && (a.preventDefault(), $(this).scrollTop(b + $(this).scrollTop())) }) })(); (function () { $("#schedule_title_textbox").on("keyup", function () { f.scheduleTitle = $("#schedule_title_textbox").val(); v.redraw(); k.save() }) })(); d(); $("#course_title_textbox").focus(); return {
            setDialogAsAddCourse: function () {
                b = !1;
                $("#course_input").dialog("open"); l = I.getAvailableColor(); $("#course_color_button").css("backgroundColor", l); $("#course_input").dialog("option", "title", "Add Course"); $("#submit_button").val("Submit")
            }, setDialogAsEditCourse: function (d) {
                b = !0; $("#course_input").dialog("open"); c = d; var g = $("#course_input"); $(g).dialog("option", "title", "Edit Course"); $("#submit_button").val("Edit Course"); $(g).find("#course_title_textbox").val(d.title); $(g).find("#instructor_textbox").val(d.instructor); l = d.color; $(g).find("#course_color_button").css("background-color",
                d.color); for (g = 0; g < d.meetingTimes.length; g++) 0 < g && $(".time_input:last").clone(!0).insertBefore("#add_time_button"); var e = 0; $(".time_input").each(function () {
                    var a = d.meetingTimes[e]; $(this).find("input:checkbox[value=mon]").prop("checked", a.meetsOnMonday); $(this).find("input:checkbox[value=tues]").prop("checked", a.meetsOnTuesday); $(this).find("input:checkbox[value=wed]").prop("checked", a.meetsOnWednesday); $(this).find("input:checkbox[value=thurs]").prop("checked", a.meetsOnThursday); $(this).find("input:checkbox[value=fri]").prop("checked",
                    a.meetsOnFriday); $(this).find("input:checkbox[value=sat]").prop("checked", a.meetsOnSaturday); $(this).find("input:checkbox[value=sun]").prop("checked", a.meetsOnSunday); $(this).find(".start_hour_textbox").val(a.startHour); $(this).find(".start_minute_textbox").val(a.startMinute); $(this).find(".end_hour_textbox").val(a.endHour); $(this).find(".end_minute_textbox").val(a.endMinute); $(this).find(".location_textbox").val(a.location); $(this).find(".class_type_textbox").val(a.classType); $(this).find(".instructor_textbox").val(a.instructor);
                    $(this).find(".minute_textbox").each(function () { var a = $(this).val(); 2 > a.length && (a = "0" + a); $(this).val(a) }); a.startIsAM ? $(this).find(".start_time_AMPM_selector").val("AM") : $(this).find(".start_time_AMPM_selector").val("PM"); a.endIsAM ? $(this).find(".end_time_AMPM_selector").val("AM") : $(this).find(".end_time_AMPM_selector").val("PM"); e++
                }); a()
            }, updateHeaders: a, setCourseColor: function (a) { l = a; $("#course_color_button").css("background", a) }, getCurrentCourseColor: function () { return l }
        }
    }(), I = function () {
        var a =
        []; (function () { $(".color_selection").click(function () { var a = $(this).data("color"); q.setCourseColor(a); $("#color_picker_dialog").dialog("close") }) })(); (function () { $("#open_advanced_color_picker_button").click(function () { $("#color_picker_dialog").dialog("close"); $("#advanced_color_picker_dialog").dialog("open") }) })(); (function () {
            $("#color_picker_dialog").dialog({
                modal: !0, title: "Choose a Color", autoOpen: !1, width: 250, height: 300, resizable: !1, create: function (a) { $(a.target).parent().css("position", "fixed") },
                resizeStart: function (a) { $(a.target).parent().css("position", "fixed") }, resizeStop: function (a) { $(a.target).parent().css("position", "fixed") }, hide: { effect: "fade", duration: 180 }, show: { effect: "fade", duration: 180 }
            }); $(".color_selection").each(function () { $(this).css("background-color", $(this).data("color")) })
        })(); (function () { $(".color_selection").each(function () { a.push($(this).data("color").toUpperCase()) }) })(); return {
            getAvailableColor: function () {
                var d, b = a.slice(); for (d = 0; d < f.courses.length; d++) b.splice(b.indexOf(f.courses[d].color.toUpperCase()),
                1); return 0 < b.length ? b[0] : a[Math.floor(Math.random() * a.length)]
            }
        }
    }(); (function () {
        (function () {
            $("#advanced_color_picker_dialog").dialog({
                modal: !0, title: "Create a Color", autoOpen: !1, width: 340, height: 250, resizable: !1, create: function (a) { $(a.target).parent().css("position", "fixed") }, resizeStart: function (a) { $(a.target).parent().css("position", "fixed") }, resizeStop: function (a) { $(a.target).parent().css("position", "fixed") }, hide: { effect: "fade", duration: 180 }, show: { effect: "fade", duration: 180 }, open: function () {
                    $("#picker").colpickSetColor(q.getCurrentCourseColor(),
                    !0)
                }
            }); $("#picker").colpick({ flat: !0, layout: "rgbhex", onSubmit: function (a, d, b, f) { $("#advanced_color_picker_dialog").dialog("close"); q.setCourseColor("#" + d) } })
        })()
    })(); var v = function () {
        function a(a, b, c, d, h, e, f) {
            "undefined" == typeof f && (f = !0); "undefined" === typeof h && (h = 5); g.beginPath(); g.moveTo(a + h, b); g.lineTo(a + c - h, b); g.quadraticCurveTo(a + c, b, a + c, b + h); g.lineTo(a + c, b + d - h); g.quadraticCurveTo(a + c, b + d, a + c - h, b + d); g.lineTo(a + h, b + d); g.quadraticCurveTo(a, b + d, a, b + d - h); g.lineTo(a, b + h); g.quadraticCurveTo(a, b, a +
            h, b); g.closePath(); f && g.stroke(); e && g.fill()
        } function d() { return (m.height - 87 - 40) / Math.floor(q - e) } function b(a, b, c, d, h, e, f, m, l) {
            g.save(); void 0 === h && (h = 4); void 0 === e && (e = "left"); void 0 === f && (f = "bold 12px Tahoma"); void 0 === m && (m = 10); void 0 === l && (l = !0); g.fillStyle = "black"; g.textBaseline = "middle"; g.textAlign = e; g.font = f; f = g.measureText(a).width; var r; "left" === e && (r = h); "center" === e ? r = b / 2 : "right" === e && (r = b - h); e = !1; var u = "", k = c + r, y = "", q; for (q = 0; q < a.length; q++) f = a.charAt(q), /\S/.test(f) && (e = !0, u += f), e && /\s/.test(f) &&
            (e = !1, u += f, y += u, u = ""), f = g.measureText(y + u).width, g.measureText(u).width >= b - 2 * h ? (k = c + r, l && g.fillText(u, k, d), d += m, u = y = "") : f >= b - 2 * h && (k = c + r, l && g.fillText(y, k, d), d += m, y = ""); l && g.fillText(y + u, k, d); g.restore(); return d + m
        } function l(c, f) {
            function l(d) {
                g.save(); d = 95 + t * d; var e = p + 87, f = t, n = q - p; g.beginPath(); g.fillStyle = c.color; a(d, e, f, n, 7); g.fill(); g.stroke(); g.restore(); n = ""; h.classType.trim() && (n = " "); e = b(c.title.trim() + n + h.classType, f, d, e + 10, 4, "center", "bold 11px Tahoma", 12); h.instructor.trim() && (e = b(h.instructor.trim(),
                f, d, e + 4, 4, "left", "bold 10px Tahoma", 15)); n = "" + x.timeToString(h.startHour, h.startMinute, h.startIsAM); n = n + "-" + x.timeToString(h.endHour, h.endMinute, h.endIsAM); e = b(n.trim(), f, d, e + 6, 4, "left", "11px Tahoma", 10); h.location.trim() && b(h.location.trim(), f, d, e + 5, 4, "left", "11px Tahoma", 10)
            } var r; for (r = 0; r < c.meetingTimes.length; r++) {
                var h = c.meetingTimes[r], p = x.to24HourTime(h.startHour, h.startMinute, h.startIsAM, !1) - e, q = x.to24HourTime(h.endHour, h.endMinute, h.endIsAM, !0) - e, v = d(), t = (m.width - 95 - 40) / f, p = p * v, q = q * v; h.meetsOnMonday &&
                l(k.Monday); h.meetsOnTuesday && l(k.Tuesday); h.meetsOnWednesday && l(k.Wednesday); h.meetsOnThursday && l(k.Thursday); h.meetsOnFriday && l(k.Friday); h.meetsOnSaturday && l(k.Saturday); h.meetsOnSunday && l(k.Sunday)
            }
        } function c() {
            var c, n, r = 5, k = !1; g.clearRect(0, 0, m.width, m.height); for (c = 0; c < f.courses.length; c++) { var h = f.courses[c]; for (n = 0; n < h.meetingTimes.length; n++) if (h.meetingTimes[n].meetsOnSaturday || h.meetingTimes[n].meetsOnSunday) { k = !0; r = 7; break } } c = 11; n = 17; for (i = 0; i < f.courses.length; i++) for (j = 0; j < f.courses[i].meetingTimes.length; j++) {
                var p =
                f.courses[i].meetingTimes[j], h = x.to24HourTime(p.startHour, p.startMinute, p.startIsAM, !1), p = x.to24HourTime(p.endHour, p.endMinute, p.endIsAM, !0); h < c && (c = Math.floor(h)); p > n && (n = 24 !== p ? Math.floor(p + 1) : Math.floor(p))
            } e = c; q = n; c = r; for (n = p = 0; n < f.courses.length; n++) for (var w = f.courses[n], h = 0; h < w.meetingTimes.length; h++) {
                curMT = w.meetingTimes[h]; var A = x.to24HourTime(curMT.startHour, curMT.startMinute, curMT.startIsAM, !1) - e, t = x.to24HourTime(curMT.endHour, curMT.endMinute, curMT.endIsAM, !0) - e, B = Math.floor(q - e), u = d(),
                C = (m.width - 95 - 40) / c, A = A * u, t = t * u, y = A + 87, A = t - A, t = ""; curMT.classType.trim() && (t = " "); t = b(w.title.trim() + t + curMT.classType, C, 0, y + 10, 4, "center", "bold 11px Tahoma", 12); curMT.instructor.trim() && (t = b(curMT.instructor.trim(), C, 0, t + 4, 4, "left", "bold 10px Tahoma", 15, !1)); var z = "", z = z + x.timeToString(curMT.startHour, curMT.startMinute, curMT.startIsAM), z = z + "-", z = z + x.timeToString(curMT.endHour, curMT.endMinute, curMT.endIsAM), t = b(z.trim(), C, 0, t + 6, 4, "left", "11px Tahoma", 10, !1); curMT.location.trim() && (t = b(curMT.location.trim(),
                C, 0, t + 5, 4, "left", "11px Tahoma", 10)); u = (t - y) / A * u * B + 137; minSpacingHeight = 45 * B + 127; B = Math.max(u, minSpacingHeight); B > p && (p = B)
            } 32E3 < p && (p = 32E3); m.height = p < v ? v : p; g.fillStyle = "#FFFFFF"; g.save(); g.lineWidth = 3; g.fillRect(0, 0, m.width, m.height); a(0, 0, m.width, m.height, 15); g.restore(); g.fillStyle = "black"; c = "Monday Tuesday Wednesday Thursday Friday Saturday Sunday".split(" "); k = k ? 7 : 5; n = (m.width - 95 - 40) / k; h = k + 1; for (i = 0; i < h; i++) g.beginPath(), g.moveTo(95 + n * i, 69), g.lineTo(95 + n * i, m.height - 40 + 8), g.stroke(), i < k && (g.font =
            "14px Tahoma", g.fillText(c[i], 95 + n * i + .24 * n, 64)); k = 2 * Math.floor(q - e) + 1; c = d() / 2; n = Math.floor(e); h = !1; p = !0; for (i = 0; i < k; i++) w = "", g.save(), g.beginPath(), g.lineWidth = 2, g.strokeStyle = h ? "#696969" : "#000000", g.moveTo(87, 87 + c * i), g.lineTo(m.width - 40 + 8, 87 + c * i), g.stroke(), g.restore(), g.save(), w = 0 != n ? w + n : w + "12", w = h ? w + ":30" : w + ":00", w = p ? w + "AM" : w + "PM", g.font = "14px Tahoma Arial", g.textBaseline = "middle", g.fillText(w, 23, 87 + c * i), g.restore(), h && n++, 12 == n && h && (p = !p), 12 < n && (n = 1), h = !h; for (c = 0; c < f.courses.length; c++) l(f.courses[c],
            r); b(f.scheduleTitle, m.width, 0, 24, 40, "center", "bold 14px Tahoma", 16)
        } function r() { var a = m.width, b = m.height; m.width = 900; m.height = 900; c(); var d = document.getElementById("schedule_display").toDataURL("image/png"); m.width = a; m.height = b; c(); return d } var m = document.getElementById("schedule_display"), g = $("#schedule_display")[0].getContext("2d"), e = 11, q = 17, v = m.height, k = { Monday: 0, Tuesday: 1, Wednesday: 2, Thursday: 3, Friday: 4, Saturday: 5, Sunday: 6 }; (function () {
            $("#schedule_display_viewport").bind("mousewheel DOMMouseScroll",
            function (a) { var b = null; "mousewheel" == a.type ? b = -1 * a.originalEvent.wheelDelta : "DOMMouseScroll" == a.type && (b = 40 * a.originalEvent.detail); b && (a.preventDefault(), $(this).scrollTop(b + $(this).scrollTop())) })
        })(); c(); return {
            redraw: function () { c() }, print: function () {
                var a = r(), b = window.open(), c = "<!DOCTYPE html>", c = c + "<html>", c = c + "<head><title>Schedule created at StudyGizmo.com</title></head>", c = c + "<body>", c = c + '<div id="right_click_prompt"></div>', c = c + ('<img src="' + a + '">'), c = c + "</body>", c = c + "</html>"; $(b.document).ready(function () {
                    b.document.write(c);
                    b.document.close(); b.focus(); setTimeout(function () { b.print(); b.close() }, 200)
                })
            }, saveImage: function () { var a = m.width, b = m.height; m.width = 900; m.height = 900; c(); m.toBlob(function (a) { saveAs(a, "Schedule.png") }); m.width = a; m.height = b; c() }
        }
    }(), E = function () {
        function a() { var a = $("#course_title_textbox").val(); return 0 === jQuery.trim(a).length ? ($("#course_title_textbox").addClass("ui-state-error"), $("#course_title_textbox_error").html("<br />Course title is required.").show(), !1) : !0 } function d() {
            var a = !0; $(".time_textbox").each(function () {
                var b =
                $(this).val(); b.trim() || (a = !1, $(this).addClass("ui-state-error"), $(this).closest(".time_input").find(".time_textbox_error").text("Start and end times are required.").show()); /\D/g.test(b) && (a = !1, $(this).addClass("ui-state-error"))
            }); return a
        } function b() { var a = !0; $(".time_input").each(function () { 0 === $(this).find(".day_checkbox:checked").length && ($(this).find(".day_selector_error").text("Course must meet at least one day per week.").show(), a = !1) }); return a } function f() {
            var a = !0; $(".time_input").each(function () {
                var b =
                parseInt($(this).find(".start_hour_textbox").val(), 10), d = parseInt($(this).find(".end_hour_textbox").val(), 10), g = parseInt($(this).find(".start_minute_textbox").val(), 10), e = parseInt($(this).find(".end_minute_textbox").val(), 10), f = "AM" == $(this).find(".start_time_AMPM_selector").val() ? !0 : !1, l = "AM" == $(this).find(".end_time_AMPM_selector").val() ? !0 : !1, b = x.to24HourTime(b, g, f); x.to24HourTime(d, e, l, !0) <= b && ($(this).closest(".time_input").find(".time_textbox_error").text("Courses cannot end at or before their starting time.").show(),
                a = !1)
            }); return a
        } (function () { $("#course_input").on("keyup", "#course_title_textbox", function () { $(this).val() && ($(this).removeClass("ui-state-error"), $("#course_title_textbox_error").hide()) }) })(); (function () { $("#course_input").on("keyup change", ".time_textbox", function () { $(this).val() && ($(this).removeClass("ui-state-error"), $(this).closest(".time_input").find(".time_textbox_error").text("Start and end times are required.").hide()) }) })(); (function () { $("#course_input").on("change", ".day_checkbox", function () { $(this).closest(".time_input").find(".day_selector_error").hide() }) })();
        (function () { $("#course_input").on("blur", ".time_textbox", function () { if (/\D/g.test($(this).val())) { var a = $(this).val(), a = a.replace(/\D/g, ""); $(this).val(a); q.updateHeaders() } }) })(); (function () {
            $("#course_input").on("blur", ".hour_textbox", function () { if (/\d/g.test($(this).val())) { var a = parseInt($(this).val(), 10); 12 < a ? a = 12 : 1 > a && (a = 1); $(this).val(a); q.updateHeaders() } }); $("#course_input").on("blur", ".minute_textbox", function () {
                if (/\d/g.test($(this).val())) {
                    var a = parseInt($(this).val(), 10), b = ""; 59 < a ? a =
                    59 : 0 > a && (a = 0); 10 > a && (b += "0"); b += a; $(this).val(b); q.updateHeaders()
                }
            })
        })(); return { isValid: function () { var c = [], k = d(); c.push(k); k && c.push(f()); c.push(b()); c.push(a()); for (k = 0; k < c.length; k++) if (!1 === c[k]) return !1; return !0 }, resetErrors: function (a) { $(a).find("input").removeClass("ui-state-error"); $(a).find(".error_hint").hide() } }
    }(), D = function () {
        (function () {
            $("#generic_warning_dialog").dialog({
                modal: !0, autoOpen: !1, create: function (a) { $(a.target).parent().css("position", "fixed") }, resizeStart: function (a) {
                    $(a.target).parent().css("position",
                    "fixed")
                }, resizeStop: function (a) { $(a.target).parent().css("position", "fixed") }, hide: { effect: "fade", duration: 180 }, show: { effect: "fade", duration: 180 }, buttons: { OK: function () { $(this).dialog("close") } }, resizable: !1
            })
        })(); return { showWarningDialog: function (a, d) { var b = $("#generic_warning_dialog"); $(b).dialog("open"); $(b).dialog("option", "title", a); $("#generic_warning_dialog_text").html(d) } }
    }(); (function () {
        (function () {
            $("#new_warning_dialog").dialog({
                title: "Confirm New Schedule", modal: !0, autoOpen: !1, hide: {
                    effect: "fade",
                    duration: 180
                }, show: { effect: "fade", duration: 180 }, buttons: { Cancel: function () { $(this).dialog("close") }, Yes: function () { f.courses = []; f.scheduleTitle = ""; $("#schedule_title_textbox").val(""); v.redraw(); k.save(); $(this).dialog("close") } }, create: function (a) { $(a.target).parent().css("position", "fixed") }, resizeStart: function (a) { $(a.target).parent().css("position", "fixed") }, resizeStop: function (a) { $(a.target).parent().css("position", "fixed") }, resizable: !1, width: 358
            })
        })()
    })(); (function () {
        (function () {
            $("#import_warning_dialog").dialog({
                title: "Confirm Import",
                modal: !0, autoOpen: !1, hide: { effect: "fade", duration: 180 }, show: { effect: "fade", duration: 180 }, buttons: {
                    Cancel: function () { $(this).dialog("close") }, Yes: function () {
                        var a = $(this).data("importedCourses"); $(this).dialog("close"); try {
                            var d = JSON.parse(a), b, l; void 0 !== d.courses ? (b = d.courses, l = d.scheduleTitle) : (b = d, l = ""); var c; if (void 0 === b.length) { D.showWarningDialog("File Load Error", "File did not load successfully. Ensure that the file type is a .csmo file."); return } for (c = 0; c < b.length; c++) if ("69761aa6-de4c-4013-b455-eb2a91fb2b76" !=
                            b[c].DATA_CHECK.trim()) { D.showWarningDialog("File Load Error", "File did not load successfully. Ensure that the file type is a .csmo file, otherwise the save file may be corrupted."); return }
                        } catch (q) { D.showWarningDialog("File Load Error", "File did not load successfully. Ensure that the file type is a .csmo file."); return } f.courses = b; f.scheduleTitle = l; $("#schedule_title_textbox").val(l); k.fixImport(); v.redraw(); k.save()
                    }
                }, create: function (a) { $(a.target).parent().css("position", "fixed") }, resizeStart: function (a) {
                    $(a.target).parent().css("position",
                    "fixed")
                }, resizeStop: function (a) { $(a.target).parent().css("position", "fixed") }, resizable: !1, width: 358
            })
        })()
    })(); (function () {
        (function () { FileReaderJS.setupDrop(document.getElementById("import_schedule_drop"), { readAsDefault: "Text", on: { load: function (a, d) { var b = $("#import_warning_dialog"); $(b).data("importedCourses", a.target.result); $(b).dialog("open"); $("#import_schedule_dialog").dialog("close") } } }) })(); (function () { $("body").on("drop dragover", function (a) { a.preventDefault() }, !1) })(); (function () {
            $("#import_schedule_dialog").dialog({
                title: "Import Schedule",
                dragClass: "drag", resizable: !1, create: function (a) { $(a.target).parent().css("position", "fixed") }, resizeStart: function (a) { $(a.target).parent().css("position", "fixed") }, resizeStop: function (a) { $(a.target).parent().css("position", "fixed") }, hide: { effect: "fade", duration: 180 }, show: { effect: "fade", duration: 180 }, width: 300, height: 250, maxHeight: 275, maxWidth: 400, modal: !0, minHeight: 220, minWidth: 200, autoOpen: !1
            })
        })()
    })(); var k = function () {
        function a() { var a = JSON.stringify(f); localStorage.setItem("courses", a) } function d() {
            if (0 <
            f.courses.length) { var a, d; for (a = 0; a < f.courses.length; a++) for (d = 0; d < f.courses[a].meetingTimes.length; d++) { var c = f.courses[a].meetingTimes[d]; void 0 === c.classType && (c.classType = ""); void 0 === c.instructor && void 0 !== f.courses[a].instructor ? c.instructor = f.courses[a].instructor : void 0 === c.instructor && (c.instructor = ""); void 0 !== f.courses[a].instructor && (f.courses[a].instructor = void 0) } for (a = 0; a < f.courses.length; a++) f.courses[a].SAVE_VERSION = 3 }
        } (function () {
            var b = localStorage.getItem("courses"); b && (b = JSON.parse(b),
            void 0 !== b.courses ? (f.courses = b.courses, f.scheduleTitle = b.scheduleTitle) : (f.courses = b, f.scheduleTitle = ""), $("#schedule_title_textbox").val(f.scheduleTitle), d()); v.redraw(); a()
        })(); return { exportSchedule: function () { var a = JSON.stringify(f), a = new Blob([a], { type: "text/plain;charset=utf-8" }); saveAs(a, "Schedule.csmo") }, importSchedule: function () { $("#import_schedule_dialog").dialog("open") }, save: a, fixImport: d }
    }()
});